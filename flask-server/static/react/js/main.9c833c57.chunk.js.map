{"version":3,"sources":["firebase.js","components/Navbar/navbar.jsx","components/Register/login.jsx","components/Register/signup.jsx","components/Register/logout.jsx","components/home.jsx","components/Checkin/checkin.jsx","components/search.jsx","components/Search/searchStore.jsx","components/Search/filter.jsx","components/Search/map.jsx","components/Search/newMap.jsx","components/Admin/createStore.jsx","components/Admin/allStores.jsx","components/Checkin/current.jsx","components/Checkin/history.jsx","Apps.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","auth","GoogleAuthProvider","analytics","Navbar","props","componentDidUpdate","bind","state","redirect","username","thisKeyword","this","onAuthStateChanged","user","firebaseId","currentUser","uid","axios","get","params","then","response","data","name","setState","Fragment","className","id","to","authenticated","style","paddingRight","paddingTop","color","fontWeight","Component","Login","authWithGoogle","authEmailPassword","console","log","signInWithPopup","result","error","event","preventDefault","email","emailInput","value","password","passwordInput","fetchSignInMethodsForEmail","providers","length","createUserWithEmailAndPassword","history","push","indexOf","signInWithEmailAndPassword","loginForm","reset","alert","catch","onClick","onSubmit","ref","form","htmlFor","type","aria-describedby","placeholder","input","SignUp","handleChange","target","usernameInput","method","url","onChange","withRouter","Logout","signOut","height","textAlign","Home","CheckIn","componentDidMount","checkOut","storeName","timeIn","object","timeOut","Date","toLocaleTimeString","Search","SearchStore","printList","capacityRetriveal","allStores","List","stores","test","isCheckedIn","countersList","len","storeList","i","allStoreCapcities","Object","values","newList","number","marginBottom","class","width","scope","map","x","in","marginLeft","settingObject","a","aSynced","createChechkin","time","storeId","$oid","aria-label","Filter","getAllStores","mapStyles","MapContainer","theLat","theLng","searchInput","margin","justifyContent","marginTop","action","google","zoom","initialCenter","lat","lng","GoogleApiWrapper","SimpleMap","onInfoWindowClose","markers","mouseIsOver","index","areas","clicked","res","prevState","assign","bootstrapURLKeys","key","heatmapLibrary","heatmap","positions","weight","options","radius","opacity","keys","store","position","visible","onClose","React","LoadingContainer","createStore","step","AllStores","Current","History","allCheckins","statement","Apps","handleLanguage","loading","removeAuthListener","exact","path","component","Map","initMaps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.9c833c57.chunk.js","sourcesContent":["import firebase from \"firebase\"\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDdnZQkBPyg0tMfD873IM5hXutIHFb4UY8\",\n    authDomain: \"covid-checkin-4cfae.firebaseapp.com\",\n    databaseURL: \"https://covid-checkin-4cfae.firebaseio.com\",\n    projectId: \"covid-checkin-4cfae\",\n    storageBucket: \"covid-checkin-4cfae.appspot.com\",\n    messagingSenderId: \"909798680205\",\n    appId: \"1:909798680205:web:02bd646b8dc0239e9764c4\",\n    measurementId: \"G-9Y6KWK7EGP\"\n};\n\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nfirebase.analytics();\n\nexport { app, googleProvider }","import React, { Component, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/styles.css\";\nimport axios from 'axios';\nimport { app } from \"../../firebase\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    // allows you to use this inside of function\n    this.componentDidUpdate = this.componentDidUpdate.bind(this);\n    this.state = {\n      redirect: false,\n      username: ''\n    }\n  }\n\n  componentDidUpdate() {\n    var thisKeyword = this;\n    // retirvers the id of the curently signed in user\n    app.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // console.log(\"user: \",user)\n        var user = app.auth().currentUser;\n        // console.log(\"user.uid:\"+ user.uid);\n        const firebaseId = user.uid; \n        // console.log(\"id: \" + firebaseId);\n        // console.log(\"id: \" + firebaseId);\n\n        // this sends firebaseid to backend as paramter\n        axios.get('/api/getUser', {\n          params: {\n            firebaseId\n          }\n        })\n        .then(function (response) {\n          // ============================\n          // console.log(response);\n          // console.log(response.data);\n          // console.log(response.data[\"0\"])\n          // ============================\n          let object =response.data[\"0\"];\n          const username= object.name;\n          if (thisKeyword.state.username !== username) {\n            // console.log(\"state username: \", thisKeyword.state.username);\n            // console.log(\"username: \", username);\n            thisKeyword.setState({username: username});\n          }\n        });\n      }\n    });  \n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar sticky-top navbar-expand-lg navbar navbar-dark bg-dark \" id=\"navbar nav\">\n          <Link to=\"/\" className=\"navbar-brand\"> Covid Check-In</Link>\n          <div className=\"collapse navbar-collapse navbar-right\" id=\"navbarNav\">\n            <ul className=\"nav navbar-nav mr-auto\">\n            </ul>\n            <ul className=\"nav navbar-nav\">\n\n              {/* Data that is dependent on authentication */}\n              {this.props.authenticated === false\n                ? (\n                  // when not autheticated\n                  <React.Fragment>\n                    <Link to=\"/\" className=\"nav-link\"><li>Home</li></Link>\n                    <Link to=\"/login\" className=\"nav-link\"><li>Login</li></Link>\n                    <Link to=\"/signup\" className=\"nav-link\"><li>SignUp</li></Link>\n                  </React.Fragment>\n                )\n                :\n                // when signed in\n                <React.Fragment>\n                  {this.componentDidUpdate()}\n                  <div style={{paddingRight: '400px', paddingTop :\"7px\" }}>\n                    {/* , paddingTop :\"7px\"} */}\n                  <span style={{color: 'white'}}> You are signed in as,   </span>\n                  <span style={{color: '#4ac6f7', fontWeight: \"bold\"}}> { this.state.username}</span>\n                  </div>\n                \n                {/* <li>{username}</li> */}\n                  <Link to=\"/\" className=\"nav-link\"><li>Home</li></Link>\n                  <Link to=\"/checkin/checkin\" className=\"nav-link\"><li>CheckIn</li></Link>\n                  <Link to=\"/search\" className=\"nav-link\"><li>Search</li></Link>\n                  <Link to=\"/logout\" className=\"nav-link \">Logout</Link>\n                </React.Fragment>\n\n              }\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { app, googleProvider } from \"../../firebase\";\n\nimport \"firebase/auth\";\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.authWithGoogle = this.authWithGoogle.bind(this);\n    this.authEmailPassword = this.authEmailPassword.bind(this);\n    this.state = {\n      redirect: false,\n    }\n  }\n  \n  authWithGoogle() {\n    console.log(\"authed with google\");\n    app.auth().signInWithPopup(googleProvider)\n      .then((result, error) => {\n        if (error) {\n          console.log(error);\n        }\n        else {\n          this.setState({ redirect: true });\n        }\n      })\n  }\n\n  authEmailPassword(event) {\n    event.preventDefault();\n    console.log(\"authed with email\");\n    const email = this.emailInput.value;\n    const password = this.passwordInput.value;\n    console.log(email);\n\n    // this will check if anyone has the email \n    app.auth().fetchSignInMethodsForEmail(email)\n      .then((providers) => {\n        // determines if person doesn't have an account\n        if (providers.length === 0) {\n          // create user\n          app.auth().createUserWithEmailAndPassword(email, password);\n          this.props.history.push('/');\n          return (<Redirect to=\"/\" />);\n        }\n        else if (providers.indexOf(\"password\") === -1) {\n          // they used google \n          this.loginForm.reset();\n          alert(\"Try an alternative login, such as Google\");\n        }\n        else {\n          // sign user in\n          console.log(\"user signed in\");\n          app.auth().signInWithEmailAndPassword(email, password);\n          this.props.history.push('/');\n          return (<Redirect to=\"/\" />);\n\n        }\n      })\n      .then((user) => {\n        if (user && user.email) {\n          this.loginForm.reset();\n          this.setState({ redirect: true });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(error);\n      })\n\n    // Un comment to aid in debugging\n    // console.table([{\n    //   email: this.emailInput.value,\n    //   password: this.passwordInput.value\n    // }])\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return (<Redirect to='/' />);\n    }\n    return (\n      <div className=\"loginPage\">\n        <h1>Login</h1>\n        <div className=\"googleLogin\">\n          <button className=\"btn btn-success\" onClick={() => { this.authWithGoogle() }} > Log in with Google</button>\n        </div>\n\n        <form className=\"ui form\" onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }} >\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref={(input) => { this.emailInput = input }}></input>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" name=\"pass\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" ref={(input) => { this.passwordInput = input }}></input>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { app } from \"../../firebase\";\nimport { withRouter } from 'react-router';\nimport \"firebase/auth\";\nimport axios from 'axios';\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.authEmailPassword = this.authEmailPassword.bind(this);\n        this.state = {\n            redirect: false,\n        }\n    }\n    // tracks changes on input value to username, paramter passed in is event from username input\n      handleChange = event => {\n        //   anything added in the name input of form is added to state\n        this.setState({ name: event.target.value });\n      }\n\n    authEmailPassword(event) {\n        // Stops broswer from relo\n        const { history } = this.props;\n        event.preventDefault();\n        console.log(\"authed with email\");\n        // const history = useHistory();\n        const email = this.emailInput.value;\n        const password = this.passwordInput.value;\n        const name= this.usernameInput.value;\n        // this.props.onSelectLanguage(name);   \n        console.log(email);\n       \n        // this will check if anyone has the email \n        app.auth().fetchSignInMethodsForEmail(email)\n            .then((providers) => {\n                // determines if person doesn't have an account\n                if (providers.length === 0) {\n                    // create user\n                    app.auth().createUserWithEmailAndPassword(email, password);\n                    // this.props.history.push('/');\n                    history.push('/');\n                    // var user = app.auth().currentUser;\n                    app.auth().onAuthStateChanged(function(user) {\n                        if (user) {\n                            // console.log(\"user: \",user)\n                            var user = app.auth().currentUser;\n                            // console.log(\"user.uid:\"+ user.uid);\n                            const firebaseId = user.uid; \n                            console.log(\"id: \" + firebaseId);\n                            axios({\n                                method:'post',\n                                url:'/api/createUser',\n                                // data to be passed to backend\n                                data: {\n                                    name, email, firebaseId\n                                }\n                            })\n                            .catch(function (error) {\n                                console.log(error);\n                            });  \n                        }\n                    });   \n                }\n                else if (providers.indexOf(\"password\") === -1) {\n                    // they used google \n                    this.loginForm.reset();\n                    alert(\"Email already In use\");\n                } else {\n                    alert(\"failed to create user, try again later\");\n                    console.log(\"failed to create user\");\n                }\n            })\n            .then((user) => {\n                if (user && user.email) {\n                    // console.log(\"here?\")\n                    // var user = firebase.auth().currentUser;\n                    // console.log(\"user: \"+ user);\n                    this.loginForm.reset();\n                    this.setState({ redirect: true });\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n                alert(error);\n            })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return (<Redirect to='/' />);\n        }\n        return (\n            <React.Fragment>\n                <div className=\"loginPage\">\n                    <h1>SignUp</h1>\n                    <form onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputUsername\">Username</label>\n                            <input type=\"text\" name=\"username\" ref={(input) => { this.usernameInput = input }}/> \n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref={(input) => { this.emailInput = input }} onChange={this.handleChange}></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\">Password</label>\n                            <input type=\"password\" name=\"pass\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" ref={(input) => { this.passwordInput = input }} ></input>\n                        </div>\n                        <div>\n                            <button type=\"submit\" className=\"btn btn-primary\" >Create User</button>\n\n                        </div>\n                    </form>\n                </div>   \n            </React.Fragment>\n            );\n    }\n}\nexport default withRouter(SignUp);\n\n","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { app } from \"../../firebase\"\n\nclass Logout extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirect: false\n        }\n    }\n\n    componentWillMount() {\n        app.auth().signOut().then((user) => {\n            this.setState({ redirect: true });\n        });\n    }\n\n    render() {\n        if (this.state.redirect === true) {\n            console.log(\"logged out\");\n            return (<Redirect to=\"/\" />);\n\n        }\n        return (\n            <div style={{ height: \"100%\" }}>\n                <h1 style={{ textAlign: \"center\" }}> Logging out</h1>\n            </div>\n        )\n    }\n}\n\nexport default Logout;","import React from \"react\";\nimport \"../App.css\";\n\nfunction Home() {\n  return (\n    <div className=\"App body\">\n      <header className=\"App-header\">\n        <p>Welcome to the Covid Check-In Website!</p>\n      </header>\n\n      <div className=\"container\">\n        <div className=\"row\" id=\"padding\">\n          <div className=\"col-sm\">\n            <h3 id=\"text\">Information Section</h3>\n            <p id=\"text\">This is a website created to better apply social distancing in our regular day to day life outside of the home. Paticapants of the app would be able to checkin to stores upon arrival and be aware of how many people have checked into a particular store or area and plan accordingly.</p>\n          </div>\n          <div className=\"col-sm\">\n            <h3 id=\"text\">About Us</h3>\n\n            <p id=\"text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, perspiciatis. Facilis, laboriosam. Doloremque voluptate sint, dolor, et laudantium ipsa minima hic repudiandae nisi tempore unde porro ex dignissimos saepe deserunt.</p>\n          </div>\n          <div className=\"col-sm\">\n            <h3 id=\"text\">Our Vision</h3>\n            <p id=\"text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, perspiciatis. Facilis, laboriosam. Doloremque voluptate sint, dolor, et laudantium ipsa minima hic repudiandae nisi tempore unde porro ex dignissimos saepe deserunt.</p>\n          </div>\n        </div>\n        <small style={{ color: \"#FFFFFF\" }}>Copyright @ Covid Check-In 2020 </small>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { app } from \"../../firebase\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n\n\nclass CheckIn extends Component {\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.checkOut = this.checkOut.bind(this);\n        this.state = {\n            storeName:'',\n            timeIn: ''\n        };\n    }\n    componentDidMount() {\n        let thisKeyword = this;\n        // axios get reuquest to backend to get checkin from mongdb based on current user\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              var user = app.auth().currentUser;\n              const firebaseId = user.uid; \n              console.log(\"id: \" + firebaseId);\n\n              axios.get('/api/checkins', {\n                params: {\n                  firebaseId\n                }\n              })\n              .then(function (response) {\n\n                // ============================\n                console.log(response);\n                console.log(response.data);\n                console.log(response.data[\"0\"]);\n                // ============================\n                let object =response.data[\"0\"];\n                let storeName= object[\"name\"];\n                let timeIn= object[\"timeIn\"];\n                let timeOut= object[\"timeOut\"];\n                // if(thisKeyword.state.storeName !== storeName){\n                //     thisKeyword.setState({storeName: storeName});\n                //     thisKeyword.setState({timeIn: timeIn});\n                // }\n                // if(thisKeyword.state.timeIn !== timeIn){\n                //     thisKeyword.setState({storeName: storeName});\n                //     thisKeyword.setState({timeIn: timeIn});\n                // }\n                console.log(\"timeIn\", timeIn, \"timeOut\", timeOut);\n                if(timeOut === \"0\"){\n                    thisKeyword.setState({storeName: storeName});\n                    thisKeyword.setState({timeIn: timeIn});\n                    thisKeyword.setState({timeOut: timeOut});\n                }\n                // const username= object.name;\n                // if (thisKeyword.state.username !== username) {\n                //   // console.log(\"state username: \", thisKeyword.state.username);\n                //   // console.log(\"username: \", username);\n                //   thisKeyword.setState({username: username});\n                // }\n              });\n            }\n          });  \n    }\n\n    checkOut() {\n        var thisKeyword = this;\n        console.log(\"triggered?\");\n        // retirvers the id of the curently signed in user\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                // console.log(\"user: \",user)\n                var user = app.auth().currentUser;\n                // console.log(\"user.uid:\"+ user.uid);\n                const firebaseId = user.uid; \n                var d = new Date();\n                let timeOut= d.toLocaleTimeString();\n                console.log(\"id: \" + firebaseId);\n                console.log(\"checked out\");\n                axios({\n                    method:'post',\n                    url:'/api/updateCheckin',\n                    // data to be passed to backend\n                    data: {\n                        timeOut, firebaseId\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });  \n            }\n        }); \n        console.log(\"checked out\");\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {/* <div className=\"container center\" id=\"checkin\">\n                    <h1>To do</h1>\n                    <ul>\n                        <li>\n                            Displays Currently Checked in store\n                            <p>- checkin or out button</p>\n                            <p>- view # of people checked in</p>\n                        </li>\n\n                        <li>Displays previously checked in stores(password protected) </li>\n                    </ul>\n                </div> */}\n               \n                    {/* <table>\n                        <tbody>\n                        <tr id=\"row0\">\n                            <td id=\"cell0-2\">  You are currently signed into: {this.state.storeName}  </td>\n                        </tr>\n                        </tbody>\n                    </table> */}\n\n                {'0' !== this.state.timeOut\n                ? (\n                  //user is not checked into store\n                  <React.Fragment>\n                        <div className=\"container\">\n                            <h2> No store currently signed into </h2>\n                            <Link to=\"/checkin/history\"><button>CheckIn History</button></Link>\n                        </div>\n                  </React.Fragment>\n                )\n                :\n                // user is already checked into store \n                <React.Fragment>\n                  <div className=\"container\">\n                    <h2> You are currently signed into: {this.state.storeName} </h2>\n                    <Link to=\"/checkin/checkin\"><button onClick= { () =>this.checkOut()}> Check out?</button></Link>\n                    <div></div>\n                    <Link to=\"/checkin/history\"><button>CheckIn History</button></Link>\n                  </div>\n                  \n                </React.Fragment>\n\n\n              }\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckIn;","import React, { Component } from 'react';\nimport \"./Styles/styles.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <h1>Search</h1>\n                    <div id=\"center\">\n                        <Link to=\"/search/map\" id=\"buttons\" className=\"btn btn-secondary \">Heat Map</Link>\n                        <Link to=\"/search/filter\" className=\"btn btn-secondary\" id=\"buttons\" >Filter</Link>\n                        <Link to=\"/search/searchstore\" className=\"btn btn-secondary\" id=\"buttons\">Search Stores</Link>\n                    </div>\n\n                    <div id=\"margins \">\n                        <h1>To do</h1>\n                        <ul>\n                            <li>Heat Map </li>\n                            <li>Filtering # of people</li>\n                            <li>search by store(see # of people) </li>\n                        </ul>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Search;","import React, { Component, setState} from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { app } from \"../../firebase\";\nimport Geocode from \"react-geocode\";\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass SearchStore extends Component {\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.printList = this.printList.bind(this);\n        // this.address = this.address.bind(this);\n        this.capacityRetriveal = this.capacityRetriveal.bind(this);\n        this.state = {\n            allStores: [ ],\n            List:[],\n            stores:[],\n            object:[],\n            test:\"Johnny\",\n            id:'',\n            isCheckedIn: true,\n            countersList:[]\n        };\n    }\n    // this will execute automactically when component is rendered \n    componentDidMount() {\n        this.capacityRetriveal();\n        this.isCheckedIn();\n        const thisKeyword=this;\n        axios.get('/api/stores', {\n            // params: {\n            //   firebaseId\n            // }\n          })\n        .then(function (response) {\n            // ============================\n            // console.log(response);\n            // console.log(response.data);\n            // console.log(response.data[\"0\"])\n            // ============================\n            const allStores =response.data;\n            let len= allStores.length;\n            let storeList= [];\n\n            for(let i=0; i<len; i++) {\n                storeList.push(allStores[i]);\n            }\n            if (thisKeyword.state.List !== storeList) {\n                // console.log('yo ',thisKeyword.state.allStores)\n                thisKeyword.setState({List : storeList});\n            }\n            if (thisKeyword.state.allStores !== allStores) {\n                // console.log('yo ',thisKeyword.state.allStores)\n                thisKeyword.setState({allStores : allStores}); \n            }\n        });\n    }\n\n    capacityRetriveal() {\n        const thisKeyword=this;\n        axios.get('/api/capacityOfStore', {\n            // params: {\n            //   firebaseId\n            // }\n          })\n        .then(function (response) {\n            // ============================\n            // console.log(response);\n            console.log(\"response:\", response.data, \"tpyeof: \",typeof(response.data));\n            // console.log(response.data[\"0\"])\n            // ============================\n            const allStoreCapcities =response.data;\n            \n            // allStoreCapcities.forEach(addToList);\n            // Object.keys(allStoreCapcities).forEach(x => countersList.push(x[\"Capacity\"]));\n            // console.log(\"counterList: \", countersList, typeof(countersList));\n            let countersList=Object.values(allStoreCapcities);\n            console.log(\"counterList: \", countersList, \"type: \", typeof(countersList));\n            // let len= allStoreCapcities.length;\n            // let storeList= [];\n\n            // for(let i=0; i<len; i++) {\n            //     storeList.push(allStoreCapcities[i]);\n            // }\n            // if (thisKeyword.state.List !== storeList) {\n            //     // console.log('yo ',thisKeyword.state.allStoreCapcities)\n            //     thisKeyword.setState({List : storeList});\n            // }\n            if (thisKeyword.state.countersList !== countersList) {\n                thisKeyword.setState({countersList : countersList}); \n            }\n        });\n    }\n\n    isCheckedIn() {\n        let thisKeyword= this;\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              var user = app.auth().currentUser;\n              const firebaseId = user.uid; \n              console.log(\"id: \" + firebaseId);\n\n              axios.get('/api/checkins', {\n                params: {\n                  firebaseId\n                }\n              })\n              .then(function (response) {\n                // ============================\n                console.log(response);\n                console.log(response.data);\n                // ============================\n                let object =response.data;\n                console.log(\"object type: \",typeof(object))\n                // let bool= object[\"storeName\"];\n                // let timeIn= object[\"timeIn\"];\n                // if the current user is still checkined in somewhere the time out will be empty\n                // if('0' === object['timeOut']){\n                //     this.setState({isCheckedIn: true});\n                // }\n\n                if(object === '[]') {\n                    console.log(\"it is \");\n                }\n                if(object.length ===0){\n                    thisKeyword.setState({isCheckedIn: false});\n                }\n                // const username= object.name;\n                // if (thisKeyword.state.username !== username) {\n                //   // console.log(\"state username: \", thisKeyword.state.username);\n                //   // console.log(\"username: \", username);\n                //   thisKeyword.setState({username: username});\n                // }\n              });\n            }\n          });  \n    }\n\n    // address(lat, lng) {\n    //     // ===================\n    //     //  ADDRESS\n    //     // ===================\n    //     Geocode.setApiKey(\"AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA\");\n    //     Geocode.enableDebug();\n\n    //     Geocode.fromLatLng(lat, lng).then(\n    //         response => {\n    //             const address = response.results[0].formatted_address;\n    //             console.log(address);\n    //             return(address);\n    //         },\n    //         error => {\n    //             console.error(error);\n    //         },\n    //     );\n    // }\n\n    printList() {\n        let stores=this.state.List;\n        let newList= [];\n        let countersList= this.state.countersList;\n        let List=[]\n        let len= this.state.countersList.length;\n        console.log(\"len: \", len)\n        for(let i=0; i<len;i++) {\n            List.push(countersList[i].number);\n        }\n        console.log(\"List: \", List, typeof(List));\n \n        for(let i=0; i<stores.length; i++) {\n            newList.push(stores[i]);\n        }\n        return(\n           <div>\n                <table style={{ marginBottom: \"0px\"}} class=\"table\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th style={{ width: \"323px\"}} scope=\"col\">Name</th>\n                            <th style={{ width: \"323px\"}} scope=\"col\">Location</th>\n                            <th  style={{ width: \"333px\"}} scope=\"col\">Current Capacity </th>\n                            <th scope=\"col\">Check Into</th>\n                        </tr>\n                    </thead>\n                </table>\n               {newList.map((i, x) => (\n                    <div> \n                        {/* {this.address(i.lat, i.lng)} */}\n                        \n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n                                    {/* <th scope=\"row\">1</th> */}\n                                    <td style={{ width: \"323px\"}}> {i.name}</td>\n                                    <td style={{ width: \"323px\"}}>Pending</td>\n                                    <td style={{ width: \"323px\"}}>{List[x]}</td>\n                                    <td>\n                                        <Link in = {i} to=\"/checkin/checkin\"><button style={{ marginLeft: \"6px\"}} onClick={ () => this.settingObject(i)}> Check Into</button>\n                                        </Link>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                        \n                    </div>)\n\n               )}\n           </div> \n        );\n    }\n\n   settingObject(i) {\n        console.log(\"onlick atitvated\");\n        console.log(\"i: \", i);\n        if(this.state.object !== i ) {\n            let aSynced = async (i) => {  this.setState({object: i}) };\n            aSynced().then(() => this.createChechkin(i));\n            // async () => {  this.setState({object: i}); }; \n            // .then(this.createChechkin()); \n            // .then((value) => console.log(value))\n        } \n    }\n\n    createChechkin(i) {\n        const thisKeyword =this;\n        console.log(\"Printed?\");\n        // let fid= '';\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                var user = app.auth().currentUser;\n                const firebaseId = user.uid;  \n                var d = new Date();\n                let time= d.toLocaleTimeString();\n                let storeId= i['_id'].$oid;\n                // console.log(storeId);\n                // let aSynced = async () => {   \n                // console.log(\"firebaseId: \", firebaseId); \n                // };\n                // aSynced().then(() =>  console.log(\"dine\"), thisKeyword.setState({id: firebaseId}));\n                axios({\n                    method:'post',\n                    url:'/api/checkInto',\n                    // data to be passed to backend\n                    data: {\n                        time, firebaseId, i, storeId\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });  \n            }\n          });  \n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    {/* Data that is dependent on authentication */}\n                    {this.state.isCheckedIn\n                        ? (\n                        // user is checked into store so they cannot see stores\n                        <React.Fragment>\n                            <h4>You are already checked into a store </h4>\n                        </React.Fragment>\n                        )\n                        :\n                        //user is not checked into store therefore can select a new one\n                        <React.Fragment>\n                            <form>\n                                <input className=\"form-control mr-sm-2 container\" id=\"search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                            </form>\n                            {this.printList()}\n                            <Link to=\"/search\"><button> Back </button> </Link>\n                        </React.Fragment>\n                    \n                    } \n                </div> \n            </React.Fragment>\n        );\n    }\n}\n// export default GoogleApiWrapper({\n//     apiKey: 'AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA'\n// })(SearchStore);\nexport default SearchStore;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Filter extends Component {\n    getAllStores() {\n        axios.get('/api/stores', {\n            // params: {\n            //   firebaseId\n            // }\n          })\n        .then(function (response) {\n            // ============================\n            console.log(response);\n            console.log(response.data);\n            // console.log(response.data[\"0\"])\n            // ============================\n            let allStores =response.data;\n\n            // ============\n            // ADRESSS\n            // var geocoder  = new google.maps.Geocoder();             // create a geocoder object\n            // var location  = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);    // turn coordinates into an object          \n            // geocoder.geocode({'latLng': location}, function (results, status) {\n            //     if(status == google.maps.GeocoderStatus.OK) {           // if geocode success\n            //     var add=results[0].formatted_address;  \n            //     }\n            // });\n            // ==================\n            // var column = {Title:response.data[0].name};\n                return (\n                    <React.Fragment>\n              <div> {allStores[0].name} </div> \n\n                    <table>\n                    <th>Stores</th>\n                    {/* {allStores.map((i) => (<tr> {allStores[i].name} </tr>))} */}\n              <tr> {allStores[0].name} </tr> \n                  </table>\n\n                  <form>\n                    <input className=\"form-control mr-sm-2 container\" id=\"search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n                    </React.Fragment>\n                 \n                );\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n    {this.getAllStores()}\n            <div>Hello</div>\n            </React.Fragment>\n        \n        );\n    }\n}\n\nexport default Filter;","// In order to make google.maps.LatLng visible it’s necessary to add this line of code at the top of the file:\n/* global google */\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n    width: '80%',\n    height: '70%'\n};\n\nclass MapContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"Brampton City Center\",\n            theLat: 43.716589,\n            theLng: -79.723921,\n            searchInput: 0\n        };\n    };\n\n    search() {\n        const searchValue = this.searchInput.value;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{ margin: \"auto\", justifyContent: \"center\", textAlign: \"center\" }}>\n                    <h1 id=\"remove\">Maps</h1>\n                    <h5 style={{ marginTop: \"3px\", marginBottom: \"6px\" }}>Use the search bar to find locations or stores </h5>\n                    <h3>Location: {this.state.name}</h3>\n\n                    <nav class=\"navbar navbar-light bg-light \">\n                        <label >Search for image of: </label>\n                        <form method='POST' action=\"/\" class=\"form-inline\">\n                            <input type=\"text\" class=\"form-control\" name=\"searchValue\"id=\"searchValue\" aria-describedby=\"search value\" placeholder= \"Enter title of image to search for\" ref={(input) => { this.searchInput = input }} ></input>\n                            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                    </nav>\n                </div>\n\n                <div className=\"container\">\n                    <Map\n                        google={this.props.google}\n                        zoom={14}\n                        style={mapStyles}\n                        initialCenter={{\n                            lat: this.state.theLat,\n                            lng: this.state.theLng\n                        }} \n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA'\n})(MapContainer);\n","\nimport React, { Component, setState } from 'react';\nimport axios from 'axios';\nimport { Map, GoogleMapReact, GoogleApiWrapper, google, map, HeatMapLayer, InfoWindow, visualization, Marker } from 'google-maps-react';\n\nconst LoadingContainer = (props) => (\n    <div>Fancy loading container!</div>\n)\n\n// import HeatmapLayer from \"react-google-maps/lib/visualization/HeatmapLayer\";\n\nconst mapStyles = {\n    width: '100%',\n    height: '100%'\n};\n\nclass SimpleMap extends React.Component { \n    constructor() {\n        super();\n        this.onInfoWindowClose = this.onInfoWindowClose.bind(this);\n        this.state = {\n            markers: [],\n            mouseIsOver : false,\n            // clicked: false,\n            stores: [],\n            index: 0,\n            areas: [\n                {lat: 43.716589,lng: -79.723921, clicked: false},\n                {lat: 43.683334, lng: -79.766670, clicked: false},\n                {lat: 43.7076, lng: -79.7857,  clicked: false}\n            ]    \n        };\n    };\n    \n    // static defaultProps = {\n    //     center: {\n    //         theLat: 43.716589,\n    //         theLng: -79.723921,\n    //     },\n    //     zoom: 11\n    // };\n    componentDidMount() {\n        axios.get('/api/stores')\n          .then(res => {\n            // sets array of JSON objects to the vairble name stores\n            const stores = res.data;\n            // console.log(stores);\n            // console.log( typeof stores);\n            this.setState({ stores });\n        })\n    }\n    componentDidUpdate() {\n        // console.log(this.state.areas);\n        // for (const lat in areas) {\n        //     console.log(`${lat}: ${areas[lat]}`);\n        // }\n        // this.setState({})\n    }\n    getCounters() {\n\n    }\n\n    onInfoWindowClose() {\n        // console.log(this);\n        let index = this.state.index;\n        if(this.state.areas[index].clicked === true) {\n            // this.setState({ clicked : false});\n            this.setState(prevState => {\n                let areas = Object.assign({}, prevState.areas);  // creating copy of state variable areas\n                areas[index].clicked = false;                     // update the name property, assign a new value                 \n                return { areas };                                 // return new object areas object\n            });\n        }\n    }\n\n    render() {\n        return (\n          // Important! Always set the container height explicitly\n          <div style={{ height: '500px', width: '100%' }}>\n            <Map\n               google={this.props.google}\n              bootstrapURLKeys={{ key: 'AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA'}}\n              style={mapStyles}\n              initialCenter={{\n                lat: 43.716589,\n                lng: -79.723921,\n              }} \n            //   defaultCenter={this.props.center}\n            //   defaultZoom={this.props.zoom}\n              heatmapLibrary={true}          \n                heatmap={{    \n                    positions: [\n                      {lat: 59.955413, lng: 30.337844, weight: 6},\n                    ],\n                    options: {   \n                        radius: 100,   \n                        opacity: 0.7,\n                        // gradient :  \"rgba(0, 255, 255, 0)\"\n                        // gradient = [ \"rgba(0, 255, 255, 0)\"];\n                  }}}  \n            >\n                {/* { this.state.stores.map((store, i) => \n                <div>\n                    <Marker  \n                        key={i} \n                        position={{lat: store.lat, lng: store.lng}} \n                        onClick={() => {\n                            if(this.state.clicked === false) { \n                                this.setState({ clicked : true});\n                            }\n                        }}\n                    />\n                </div>\n                )}    */}\n                { Object.keys(this.state.areas).map((store, i) => \n                    <Marker  \n                        key={i} \n                        position={{lat: this.state.areas[i].lat, lng: this.state.areas[i].lng}} \n                        onClick={() => {\n                            this.setState({index: i}, () => {});\n                            if(this.state.areas[i].clicked === false) { \n                                // this.setState({ clicked : true});\n                                this.setState(prevState => {\n                                    let areas = Object.assign({}, prevState.areas);  // creating copy of state variable areas\n                                    areas[i].clicked = true;                     // update the name property, assign a new value \n                                    return { areas };                                 // return new object areas object\n                                }, () => {});\n                            }\n                            else{\n                                this.onInfoWindowClose();\n                            }\n                        }}\n                        // onClick={() => {this.onInfoWindowClose()}}\n                        \n                    />\n                )}  \n                    <InfoWindow \n                        visible={this.state.areas[this.state.index].clicked} \n                        position={{lat:  (this.state.areas[this.state.index].lat + 0.002), lng: this.state.areas[this.state.index].lng}} \n                        onClose={this.onInfoWindowClose}>\n                        <div>\n                            <p>\"hello world!!!\"</p>\n                        </div>\n                    </InfoWindow>   \n                {/* )}   */}\n\n            </Map>\n         </div>\n        );\n      }\n}\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDoSD0RfKO_FVMJ9I14kMkTowIkEUJYPyA',\n    LoadingContainer: LoadingContainer\n})(SimpleMap);\n ","import React, { Component } from 'react'\n\nclass createStore extends Component {\n\n    \n\n    render() {\n        return (\n            <div className=\"createStore container\">\n                <h1>Add Store</h1>\n                {/*  onSubmit={(event) => { this.authEmailPassword(event) }} ref={(form) => { this.loginForm = form }}  */}\n                <form method=\"POST\" action=\"/api/newstore\" >\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Store/Location Name</label>\n                        {/* ref={(input) => { this.emailInput = input }} */}\n                        <input type=\"text\" name=\"storeName\" className=\"form-control\" id=\"storeName\" aria-describedby=\"storeName\" placeholder=\" store/Location Name\" ></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"longitude\">Longitude</label>\n                        <input type=\"number\" step=\"0.0001\" name=\"storeLng\" className=\"form-control\" id=\"storeLng\" placeholder=\"Longitude of Store\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"latitude\">Latitude</label>\n                        <input type=\"number\" step=\"0.0001\" name=\"storeLat\" className=\"form-control\" id=\"storeLat\" placeholder=\"Latitude of Store\"></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Create Store Location</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default createStore;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass AllStoresNIU extends Component {\n    // state={storeName, storeLng, storeLat};\n    render(storeName, storeLng, storeLat) {\n        // this is the individual items to be rendered therefore stores\n        // const elements = ['one', 'two', 'three'];\n        console.log({storeName});\n        console.log({storeLng});\n        console.log({storeLat});\n        console.log(storeName);\n        console.log(storeLng);\n        console.log(storeLat);\n        const elements = [storeName, storeLng, storeLat];\n\n        // array that renders the stores\n        const items = []\n      \n        // for loop to render each store\n        for (const [index, value] of elements.entries()) {\n            // puts components into array, therefore divs will be rendered for each store\n            items.push(\n                // value is the infomration to be placed in div, therefore stores\n                <div key={index}>{value}</div>\n                )\n        }\n      \n        return (\n            <React.Fragment>\n            <div>\n            <h1>all stores</h1>\n                <div>\n                    {/* <h1>storeName</h1>\n                    <h1>storeLng</h1>\n                    <h1>storeLat</h1> */}\n                    <div>\n                        <h1>Store: </h1>\n                        {items}\n                    </div>\n                </div>\n            </div>\n        \n            </React.Fragment>\n\n        );\n    }\n}\n\nclass AllStores extends React.Component {\n    state = {\n      stores: []\n    };\n  \n    componentDidMount() {\n      axios.get('/api/stores')\n        .then(res => {\n          // sets array of JSON objects to the vairble name stores\n          const stores = res.data;\n          // console.log(stores);\n          // console.log( typeof stores);\n          this.setState({ stores });\n        })\n    }\n  \n    render() {\n      return (\n        <ul>\n          { this.state.stores.map(store => <li>{store.name}</li>)}\n        </ul>\n      )\n    }\n}\n\nexport default AllStores;","import React, { Component } from 'react'\n\nclass Current extends Component {\n\n    componentWillMount() {\n        \n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container center\" id=\"Current\">\n                  <h1>You are singed in at this store</h1>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Current;","import React, { Component, setState} from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { app } from \"../../firebase\";\nimport Geocode from \"react-geocode\";\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        // this.printList = this.printList.bind(this);\n        // this.address = this.address.bind(this);\n        this.state = {\n            allCheckins: [],\n        };\n    }\n    // this will execute automactically when component is rendered \n    componentDidMount() {\n        let thisKeyword=this;\n        app.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              var user = app.auth().currentUser;\n              const firebaseId = user.uid; \n              console.log(\"id: \" + firebaseId);\n\n              axios.get('/api/allCheckins', {\n                params: {\n                  firebaseId\n                }\n              })\n              .then(function (response) {\n                // ============================\n                console.log(response);\n                console.log(response.data);\n                console.log(response.data[\"0\"]);\n                // ============================\n                const allCheckins =response.data;\n                let len= allCheckins.length;\n                if (thisKeyword.state.allCheckins !== allCheckins) {\n                    thisKeyword.setState({allCheckins : allCheckins}); \n                }\n              });\n            }\n        }); \n    }\n\n    printList() {\n        let stores=this.state.allCheckins;\n        return(\n           <div>    \n                <h1>All Checkins</h1>\n                <table  style={{ marginBottom: \"0px\"}} class=\"table\">\n                    <thead class=\"thead-light\">\n                        <tr>\n                            {/* <th scope=\"col\">#</th> */}\n                            <th style={{ width: \"494px\"}} scope=\"col\">Store Name</th>\n                            <th style={{ width: \"468px\"}} scope=\"col\">TimeIn</th>\n                            <th scope=\"col\">TimeOut</th>\n                        </tr>\n                    </thead>\n                </table>\n\n               {stores.map((i) => (\n                    <div> \n                       \n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n                                {/* <th scope=\"row\">1</th> */}\n                                <td style={{ width: \"494px\"}}> {i.name}</td>\n                                <td style={{ width: \"468px\"}} >{i.timeIn}</td>\n                                <td>{i.timeOut}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>)\n\n               )}\n           </div> \n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                \n                {/* Data that is dependent on authentication */}\n              {this.state.statement === true\n                ? (\n                  //user is already checked into store\n                  <React.Fragment>\n                    <h4>You are already checked into a store </h4>\n                  </React.Fragment>\n                )\n                :\n                // user is checked into store so they can see stores\n                <React.Fragment>\n                  {/* <form>\n                    <input className=\"form-control mr-sm-2 container\" id=\"search\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form> */}\n                {this.printList()}\n                </React.Fragment>\n\n              }\n                \n               \n            </React.Fragment>\n        );\n    }\n}\n\nexport default History;","import React, { Component } from 'react'\nimport Navbar from \"./components/Navbar/navbar\";\nimport { app } from \"./firebase\";\nimport Login from \"./components/Register/login\";\nimport SignUp from \"./components/Register/signup\";\nimport Logout from \"./components/Register/logout\";\nimport Home from \"./components/home\";\nimport CheckIn from \"./components/Checkin/checkin\";\nimport Search from \"./components/search\";\n// import Map from \"./components/map\";\nimport \"./components/Styles/loadingStyles.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SearchStore from './components/Search/searchStore';\nimport Filter from './components/Search/filter';\nimport Map from './components/Search/map';\nimport initMaps from './components/Search/newMap';\nimport createStore from \"./components/Admin/createStore\";\nimport allStores from \"./components/Admin/allStores\";\nimport Current from \"./components/Checkin/current\";\nimport History from \"./components/Checkin/history\";\nimport axios from 'axios';\n// import history from './history';\n// import History  from 'history'\n\nclass Apps extends Component {\n    constructor() {\n        super();\n        this.state = {\n            authenticated: false,\n            loading: true,\n            username: '' \n        };\n \n    };\n    getUserName() {\n        axios.get('/api/createUser')\n        .then((response) => {\n            console.log(\"jello\");\n            const username = response.data;\n            console.log(\"type of username: \", typeof(username), \"username: \", username);\n            // console.log(\"username: \", username);\n            this.setState({ username });\n          // console.log(response.data);\n          // console.log(response.status);\n          // console.log(response.statusText);\n          // console.log(response.headers);\n          // console.log(response.config);\n        });\n    }\n\n    componentWillMount() {\n        this.removeAuthListener = app.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    authenticated: true,\n                    loading: false\n                });\n            }\n            else {\n                this.setState({\n                    authenticated: false,\n                    loading: false\n                });\n            }\n        })\n    }\n    componentWillUnmount() {\n        this.removeAuthListener();\n    }\n\n    handleLanguage = (name) => {\n        this.setState({username: name});\n    }\n\n\n    render() {\n        // it takes time in-between getting user authentication therefore something is loaded in its place\n        if (this.state.loading === true) {\n            return (\n                <div className=\"loading\">Loading&#8230;</div>\n            );\n        }\n        return (\n            <React.Fragment>\n            {/* <SignUp parentCallback = {this.callbackFunction}/> */}\n            {/* <p> {this.state.userName} </p> */}\n            <Router>\n                {/* <p>My Token = {window.token}</p> */}\n                {/* {this.getUserName()} */}\n                <Navbar authenticated={this.state.authenticated} username={this.state.username}/>\n                {/* Needs to be here so that state an ca be updated */}\n\n                {/* Switch is used to prevent multiple components from running at once when using routing */}\n                <Switch>\n                    {/* exact is used to define an absolute route, so only urls contain nothing or the slash will cause this page to render */}\n                    <Route exact path=\"/\" component={Home} />\n\n                    {/* this only renders the login component when the url typed in is login */}\n                    <Route path=\"/login\" component={() => <Login username={this.state.username}/>}/>\n                    {/* <Route path=\"/signup\" component={SignUp} handleChange={this.state.handleChange} handleSubmit={this.state.handleSubmit} value={this.state.value} var={\"dog\"}/> */}\n                    {/* <Route path=\"/signup\" component={SignUp} /> */}\n                    {/* <Route path=\"/signup\" render={props => <SignUp onSelectLanguage={this.handleLanguage} />} /> */}\n                    {/* <Route exact path=\"/singup\" onSelectLanguage={this.handleLanguage} component={SignUp} /> */}\n                    <Route exact path=\"/signup\" component={SignUp}  />\n                    {/* onSelectLanguage={this.handleLanguage} component={() => <SignUp history={History}/>} */}\n                    {/* <Route path=\"/signup\" render={props => (<SignUp {...props} onSelectLanguage={this.handleLanguage}/>)}/> */}\n                    {/* <Route exact path=\"/signup\" render={props => <SignUp {...props} onSelectLanguage={this.handleLanguage}/>} /> */}\n                    {/* <Route path=\"/signup\" render={(props) => <SignUp {...props } onSelectLanguage={this.handleLanguage} vars={\"dog\"}/> }/> */}\n                    {/* <Route path=\"/signup\" render={(props) => (<SignUp {...props} handleChange={this.state.handleChange} handleSubmit={this.state.handleSubmit} value={this.state.value} var={\"dog\"}/> )}/> */}\n                    \n                    <Route  exact path=\"/checkin/checkin\" component={CheckIn} />\n                    <Route  exact path=\"/checkin/current\" component={Current} />\n                    <Route  exact path=\"/checkin/history\" component={History} />\n                    \n                    <Route exact path=\"/logout\" component={Logout} />\n\n                    <Route exact path=\"/search/map\" component={Map} />\n                    <Route exact path=\"/search/newMap\" component={initMaps} />\n                    <Route exact path=\"/search/filter\" component={Filter} />\n                    <Route exact path=\"/search/searchstore\" component={SearchStore} />\n                    <Route path=\"/search\" component={Search} />\n                    <Route path=\"/api/newstore\" component={createStore} />\n                    <Route path=\"/admin/stores\" component={allStores} />\n\n\n                    {/* <Route path=\"/search/maps\" component={Map} /> */}\n                </Switch>\n            </Router>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Apps;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Apps from \"./Apps\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Navbar /> */}\n    <Apps />\n    {/* <allStores storeName={storeName} storeLng={storeLng} storeLat={storeLat} /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}